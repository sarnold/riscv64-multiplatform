From 6ea7f394f6aa1a0aa6c58cdd0f93059e26536ca9 Mon Sep 17 00:00:00 2001
From: Tom <support@vamrs.com>
Date: Fri, 8 Jan 2021 03:07:54 +0800
Subject: [PATCH 44/79] Fix dms_ops usage.

---
 .../starfive_dmaengine_memcpy.c               | 23 +++++++++++++++++--
 1 file changed, 21 insertions(+), 2 deletions(-)

diff --git a/drivers/dma/dw-axi-dmac-starfive/starfive_dmaengine_memcpy.c b/drivers/dma/dw-axi-dmac-starfive/starfive_dmaengine_memcpy.c
index 68c5497adf6a..aee72c10d77f 100644
--- a/drivers/dma/dw-axi-dmac-starfive/starfive_dmaengine_memcpy.c
+++ b/drivers/dma/dw-axi-dmac-starfive/starfive_dmaengine_memcpy.c
@@ -13,6 +13,7 @@
  * GNU General Public License for more details.
  */
 
+#include <linux/acpi_iort.h>
 #include <linux/kernel.h>
 #include <linux/fs.h>
 #include <linux/init.h>
@@ -136,6 +137,9 @@ int dw_dma_async_do_memcpy(void *src, void *dst, size_t size)
 	dma_addr_t src_dma, dst_dma;
 	struct dma_async_tx_descriptor *desc;
 
+	const struct iommu_ops *iommu;
+	u64 dma_addr = 0, dma_size = 0;
+
 	dma_dev = kzalloc(sizeof(*dma_dev), GFP_KERNEL);
 	if(!dma_dev){
 		dev_err(dma_dev, "kmalloc error.\n");
@@ -144,7 +148,13 @@ int dw_dma_async_do_memcpy(void *src, void *dst, size_t size)
 
 	dma_dev->bus = NULL;
 	dma_dev->coherent_dma_mask = 0xffffffff;
-	dma_dev->dma_ops = &swiotlb_dma_ops;
+
+	iort_dma_setup(dma_dev, &dma_addr, &dma_size);
+	iommu = iort_iommu_configure_id(dma_dev, NULL);
+	if (PTR_ERR(iommu) == -EPROBE_DEFER)
+		return -EPROBE_DEFER;
+
+	arch_setup_dma_ops(dma_dev, dst_dma, dma_size, iommu, true);
 
 	if(_dma_async_alloc_buf(dma_dev, &src, &dst, size, &src_dma, &dst_dma)) {
 		dev_err(dma_dev, "Err alloc.\n");
@@ -197,6 +207,9 @@ int dw_dma_memcpy_raw(dma_addr_t src_dma, dma_addr_t dst_dma, size_t size)
 	struct device *dma_dev;
 	struct dma_async_tx_descriptor *desc;
 
+	const struct iommu_ops *iommu;
+	u64 dma_addr = 0, dma_size = 0;
+
 	dma_dev = kzalloc(sizeof(*dma_dev), GFP_KERNEL);
 	if(!dma_dev){
 		DMA_PRINTK("kmalloc error.\n");
@@ -205,7 +218,13 @@ int dw_dma_memcpy_raw(dma_addr_t src_dma, dma_addr_t dst_dma, size_t size)
 
 	dma_dev->bus = NULL;
 	dma_dev->coherent_dma_mask = 0xffffffff;
-	dma_dev->dma_ops = &swiotlb_dma_ops;
+
+	iort_dma_setup(dma_dev, &dma_addr, &dma_size);
+	iommu = iort_iommu_configure_id(dma_dev, NULL);
+	if (PTR_ERR(iommu) == -EPROBE_DEFER)
+		return -EPROBE_DEFER;
+
+	arch_setup_dma_ops(dma_dev, dst_dma, dma_size, iommu, true);
 
 	chan = _dma_get_channel(DMA_MEMCPY);
 	if(!chan){
-- 
2.30.0

